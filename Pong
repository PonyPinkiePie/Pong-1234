#include <stdio.h>

#define WIDTH 82
#define HEIGHT 25
#define PADDLE_SIZE 3
#define BALL_CHAR "⭕"
#define PADDLE_CHAR '|'
#define EMPTY_CHAR ' '


void CS(){
    printf("\033[2J\033[H");
}
void drawField(int paddle1_pos, int paddle2_pos, int ball_x, int ball_y, int score1, int score2) {
    CS();
    
    printf("┏");  // Верхняя граница
    for (int x = 1; x < WIDTH; x++) {printf("━");}
    printf("┓\n");

    int shift = 0;
    for (int y = 0; y < HEIGHT; y++) {
        if (y == ball_y) {
            shift = 1;
        } else {
            shift = 0;
        }
        printf("│");
        for (int x = 1 + shift; x < WIDTH; x++) {
            if (x == 1 && y >= paddle1_pos && y < paddle1_pos + PADDLE_SIZE) {
                printf("%c", PADDLE_CHAR);
            } else if (x == WIDTH - 1 && y >= paddle2_pos && y < paddle2_pos + PADDLE_SIZE) {
                printf("%c", PADDLE_CHAR);
            } else if (x == ball_x && y == ball_y) {
                printf("%s", BALL_CHAR);
            }

            else
                printf(" ");
        }
        printf("│\n");
    }
    printf("┗");  // Нижняя граница
    for (int x = 1; x < WIDTH; x++) {
        printf("━");
    }
    printf("┛\n");

    printf("Игрок 1: %d | Игрок 2: %d\n", score1, score2);
}

int mmovePaddle(int paddle_pos, char command, int plr) {
    if (paddle_pos > 21 || paddle_pos < 1) return paddle_pos;
    printf("%d", paddle_pos);
    if (command == ' ' && paddle_pos > 0) {
        printf("command = '%c'\n", command);
        return paddle_pos;
    }

    if (plr == 1){
        if (command == 'z' || command == 'Z' && paddle_pos) {
            return paddle_pos + 1;
        }
        else if (command == 'a' || command == 'A' && paddle_pos > 0)
        {
            return paddle_pos - 1;
        }
            
    }
    else
    {
        if (command == 'k' || command == 'K' && paddle_pos){
            return paddle_pos - 1;
        }
        else if (command == 'm' || command == 'M' && paddle_pos)
        {
            return paddle_pos + 1;
        }
        
    }
    

    /*if (command == 'a' || command == 'A' && paddle_pos > 0 && plr == 1) {
        return paddle_pos - 1;
    } else if (command == 'z' || command == 'Z' && paddle_pos < HEIGHT - PADDLE_SIZE && plr == 1) {
        return paddle_pos + 1;
    } else if (command == 'k' || command == 'K' && paddle_pos < HEIGHT - PADDLE_SIZE && plr == 2) {
        return paddle_pos - 1;
    } else if (command == 'm' || command == 'M' && paddle_pos < HEIGHT - PADDLE_SIZE && plr == 2) {
        return paddle_pos + 1;
    }*/

    return paddle_pos;
}

int main() {
    int paddle1_pos = (HEIGHT - PADDLE_SIZE) / 2;
    int paddle2_pos = (HEIGHT - PADDLE_SIZE) / 2;
    int ball_x = WIDTH / 2;
    int ball_y = HEIGHT / 2;
    int ball_dx = 1;
    int ball_dy = 1;
    int score1 = 0;
    int score2 = 0;

    while (score1 < 21 && score2 < 21) {
        // char ch = getchar();

        // paddle1_pos = mmovePaddle(paddle1_pos, ch, 1);
        // paddle2_pos = mmovePaddle(paddle2_pos, ch, 2);

        
        char ch;
        while(ch = getchar() != '\n') {
            if (ch == 'A' || ch == 'a') {
                paddle1_pos -= 1;
            }
            if (ch == 'Z' || ch == 'z') {
                paddle1_pos += 1;
            }
        }

        ball_x += ball_dx; // Обновляем позицию мяча
        ball_y += ball_dy;
        
        if (ball_x == 1 && ball_y >= paddle1_pos && ball_y < paddle1_pos + PADDLE_SIZE) { // Проверка столкновения с ракетками
            ball_dx = 1;
        } else if (ball_x == WIDTH - 2 && ball_y >= paddle2_pos && ball_y < paddle2_pos + PADDLE_SIZE) {
            ball_dx = -1;
        }
        if (ball_y <= 0 || ball_y >= HEIGHT - 1) { // Проверка столкновений с верхней и нижней границами
            ball_dy = -ball_dy;
        }
        if (ball_x <= 0) { // Проверка выхода мяча за границы
            score2++;
            ball_x = WIDTH / 2;
            ball_y = HEIGHT / 2;
            ball_dx = 1;
            ball_dy = 1;
        } else if (ball_x >= WIDTH - 1) {
            score1++;
            ball_x = WIDTH / 2;
            ball_y = HEIGHT / 2;
            ball_dx = -1;
            ball_dy = -1;
        }

        drawField(paddle1_pos, paddle2_pos, ball_x, ball_y, score1, score2);
    }

    if (score1 == 21) {
        printf("Поздравляем, игрок 1 победил!\n");
    } else {
        printf("Поздравляем, игрок 2 победил!\n");
    }

    return 0;
}

